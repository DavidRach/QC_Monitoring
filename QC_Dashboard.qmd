---
title: "UMGCC FlowCore"
author: "Instrumental QC"
format:
  dashboard:
    logo: images/hex.png
    orientation: columns
    scrolling: true
    nav-buttons:
      - icon: github
        href: https://github.com/DavidRach/QC_Monitoring
        aria-label: GitHub
---

```{r}
#| message: FALSE
library(dplyr)
library(lubridate)
library(stringr)
library(plotly)

Computer <- file.path("C:", "Users", "12692", "Desktop")
MainFolder <- file.path(Computer, "QC_Website")
TheList <- c("3L", "4L", "5L", "CS")
UpdateTheDataset <- source("QC_UpdateData.R")
```

```{r}
CurrentData <- function(x, MainFolder, type){
  ArchiveLocation <- file.path(MainFolder, x, "Archive")
  
  if (type == "MFI"){
  BeadData <- list.files(ArchiveLocation, pattern="Bead",
                         full.names=TRUE)
  Data <- read.csv(BeadData, check.names=FALSE)
  Data$DateTime <- lubridate::ymd_hms(Data$DateTime)
  Data$DATE <- lubridate::ymd(Data$DATE)
  Data$TIME <- lubridate::hms(Data$TIME)
  }
  
  if (type == "Gain"){
  ArchiveData <- list.files(ArchiveLocation, pattern="Archive",
                         full.names=TRUE)
  Data <- read.csv(ArchiveData, check.names=FALSE)
  Data$DateTime <- lubridate::ymd_hms(Data$DateTime)
  }
  
  Data <- Data %>% arrange(desc(DateTime))
  return(Data)
}
```

```{r}
MFI_3L <- CurrentData(x="3L", MainFolder=MainFolder, type = "MFI")
Gain_3L <- CurrentData(x="3L", MainFolder=MainFolder, type = "Gain")

MFI_4L <- CurrentData(x="4L", MainFolder=MainFolder, type = "MFI")
Gain_4L <- CurrentData(x="4L", MainFolder=MainFolder, type = "Gain")

MFI_5L <- CurrentData(x="5L", MainFolder=MainFolder, type = "MFI")
Gain_5L <- CurrentData(x="5L", MainFolder=MainFolder, type = "Gain")

MFI_CS <- CurrentData(x="CS", MainFolder=MainFolder, type = "MFI")
Gain_CS <- CurrentData(x="CS", MainFolder=MainFolder, type = "Gain")
```

```{r}
WindowOfInterest <- Sys.time() - months(12)

MFI_3L <- MFI_3L %>% filter(DateTime >= WindowOfInterest)
Gain_3L <- Gain_3L %>% filter(DateTime >= WindowOfInterest)

MFI_4L <- MFI_4L %>% filter(DateTime >= WindowOfInterest)
Gain_4L <- Gain_4L %>% filter(DateTime >= WindowOfInterest)

MFI_5L <- MFI_5L %>% filter(DateTime >= WindowOfInterest)
Gain_5L <- Gain_5L %>% filter(DateTime >= WindowOfInterest)

MFI_CS <- MFI_CS %>% filter(DateTime >= WindowOfInterest)
Gain_CS <- Gain_CS %>% filter(DateTime >= WindowOfInterest)
```



# Home

An initial example

# 3L

```{r}
x <- Gain_3L
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "Gain")]
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

RedPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```

```{r}
x <- Gain_3L
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "rCV")]
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

VioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

RedPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```


```{r}
x <- MFI_3L
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

#colnames(x)

TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
#UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE)
```

## Gain {.tabset}

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

::: {.card title="Gain"}
:::

## MFI {.tabset}

```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

::: {.card title="MFI"}
:::

# 4L

```{r}
x <- Gain_4L
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "Gain")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots")

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

RedPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```

```{r}
x <- Gain_4L
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "rCV")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots")

VioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

RedPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```


```{r}
x <- MFI_4L
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

#colnames(x)

TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
#YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE)
```


## Gain {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsGain[[1]])
ggplotly(UltraVioletPlotsGain[[2]])
ggplotly(UltraVioletPlotsGain[[3]])
ggplotly(UltraVioletPlotsGain[[4]])
ggplotly(UltraVioletPlotsGain[[5]])
ggplotly(UltraVioletPlotsGain[[6]])
ggplotly(UltraVioletPlotsGain[[7]])
ggplotly(UltraVioletPlotsGain[[8]])
ggplotly(UltraVioletPlotsGain[[9]])
ggplotly(UltraVioletPlotsGain[[10]])
ggplotly(UltraVioletPlotsGain[[11]])
ggplotly(UltraVioletPlotsGain[[12]])
ggplotly(UltraVioletPlotsGain[[13]])
ggplotly(UltraVioletPlotsGain[[14]])
ggplotly(UltraVioletPlotsGain[[15]])
ggplotly(UltraVioletPlotsGain[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

::: {.card title="Gain"}
:::

## MFI {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsMFI[[1]])
ggplotly(UltraVioletPlotsMFI[[2]])
ggplotly(UltraVioletPlotsMFI[[3]])
ggplotly(UltraVioletPlotsMFI[[4]])
ggplotly(UltraVioletPlotsMFI[[5]])
ggplotly(UltraVioletPlotsMFI[[6]])
ggplotly(UltraVioletPlotsMFI[[7]])
ggplotly(UltraVioletPlotsMFI[[8]])
ggplotly(UltraVioletPlotsMFI[[9]])
ggplotly(UltraVioletPlotsMFI[[10]])
ggplotly(UltraVioletPlotsMFI[[11]])
ggplotly(UltraVioletPlotsMFI[[12]])
ggplotly(UltraVioletPlotsMFI[[13]])
ggplotly(UltraVioletPlotsMFI[[14]])
ggplotly(UltraVioletPlotsMFI[[15]])
ggplotly(UltraVioletPlotsMFI[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

::: {.card title="MFI"}
:::



# 5L

```{r}
x <- Gain_5L
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "Gain")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots")

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

YellowGreenPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "individual", returntype = "plots")

RedPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```

```{r}
x <- Gain_5L
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "rCV")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots")

VioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

YellowGreenPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "individual", returntype = "plots")

RedPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```


```{r}
x <- MFI_5L
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

#colnames(x)

TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

YellowGreenPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE)
```


## Gain {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsGain[[1]])
ggplotly(UltraVioletPlotsGain[[2]])
ggplotly(UltraVioletPlotsGain[[3]])
ggplotly(UltraVioletPlotsGain[[4]])
ggplotly(UltraVioletPlotsGain[[5]])
ggplotly(UltraVioletPlotsGain[[6]])
ggplotly(UltraVioletPlotsGain[[7]])
ggplotly(UltraVioletPlotsGain[[8]])
ggplotly(UltraVioletPlotsGain[[9]])
ggplotly(UltraVioletPlotsGain[[10]])
ggplotly(UltraVioletPlotsGain[[11]])
ggplotly(UltraVioletPlotsGain[[12]])
ggplotly(UltraVioletPlotsGain[[13]])
ggplotly(UltraVioletPlotsGain[[14]])
ggplotly(UltraVioletPlotsGain[[15]])
ggplotly(UltraVioletPlotsGain[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

::: {.card title="Gain"}
:::

## MFI {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsMFI[[1]])
ggplotly(UltraVioletPlotsMFI[[2]])
ggplotly(UltraVioletPlotsMFI[[3]])
ggplotly(UltraVioletPlotsMFI[[4]])
ggplotly(UltraVioletPlotsMFI[[5]])
ggplotly(UltraVioletPlotsMFI[[6]])
ggplotly(UltraVioletPlotsMFI[[7]])
ggplotly(UltraVioletPlotsMFI[[8]])
ggplotly(UltraVioletPlotsMFI[[9]])
ggplotly(UltraVioletPlotsMFI[[10]])
ggplotly(UltraVioletPlotsMFI[[11]])
ggplotly(UltraVioletPlotsMFI[[12]])
ggplotly(UltraVioletPlotsMFI[[13]])
ggplotly(UltraVioletPlotsMFI[[14]])
ggplotly(UltraVioletPlotsMFI[[15]])
ggplotly(UltraVioletPlotsMFI[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

::: {.card title="MFI"}
:::


# CS

```{r}
x <- Gain_CS
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "Gain")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots")

VioletPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

YellowGreenPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "individual", returntype = "plots")

RedPlotsGain <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```

```{r}
x <- Gain_CS
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

TheColumnNames <- TheColumns[str_detect(TheColumns, "rCV")]
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "individual", returntype = "plots")

VioletPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "individual", returntype = "plots")

BluePlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "individual", returntype = "plots")

YellowGreenPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "individual", returntype = "plots")

RedPlotsRCV <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "individual", returntype = "plots")
```


```{r}
x <- MFI_CS
x <- x %>% dplyr::filter(Timepoint %in% c("Before", "After"))
TheColumns <- x %>% select(where(~is.numeric(.)||is.integer(.))) %>% colnames()
TheColumns <- setdiff(TheColumns, "TIME")

#colnames(x)

TheIntermediate <- TheColumns[!str_detect(TheColumns, "Gain")]
TheColumnNames <- TheIntermediate[str_detect(TheIntermediate, "-A")]
  
UltraVioletGains <- TheColumnNames[str_detect(TheColumnNames, "^UV")]
VioletGains <- TheColumnNames[str_detect(TheColumnNames, "^V")]
BlueGains <- TheColumnNames[str_detect(TheColumnNames, "^B")]
YellowGreenGains <- TheColumnNames[str_detect(TheColumnNames, "^YG")]
RedGains <- TheColumnNames[str_detect(TheColumnNames, "^R")]

UltraVioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=UltraVioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

VioletPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=VioletGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

BluePlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=BlueGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

YellowGreenPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=YellowGreenGains,
                      plotType = "comparison", returntype = "plots",
                      Metadata="Timepoint", strict = TRUE)

RedPlotsMFI <- QC_Plots(x=x, FailedFlag=TRUE, MeasurementType=RedGains,
                     plotType = "comparison", returntype = "plots",
                     Metadata="Timepoint", strict = TRUE)
```


## Gain {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsGain[[1]])
ggplotly(UltraVioletPlotsGain[[2]])
ggplotly(UltraVioletPlotsGain[[3]])
ggplotly(UltraVioletPlotsGain[[4]])
ggplotly(UltraVioletPlotsGain[[5]])
ggplotly(UltraVioletPlotsGain[[6]])
ggplotly(UltraVioletPlotsGain[[7]])
ggplotly(UltraVioletPlotsGain[[8]])
ggplotly(UltraVioletPlotsGain[[9]])
ggplotly(UltraVioletPlotsGain[[10]])
ggplotly(UltraVioletPlotsGain[[11]])
ggplotly(UltraVioletPlotsGain[[12]])
ggplotly(UltraVioletPlotsGain[[13]])
ggplotly(UltraVioletPlotsGain[[14]])
ggplotly(UltraVioletPlotsGain[[15]])
ggplotly(UltraVioletPlotsGain[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsGain[[1]])
ggplotly(VioletPlotsGain[[2]])
ggplotly(VioletPlotsGain[[3]])
ggplotly(VioletPlotsGain[[4]])
ggplotly(VioletPlotsGain[[5]])
ggplotly(VioletPlotsGain[[6]])
ggplotly(VioletPlotsGain[[7]])
ggplotly(VioletPlotsGain[[8]])
ggplotly(VioletPlotsGain[[9]])
ggplotly(VioletPlotsGain[[10]])
ggplotly(VioletPlotsGain[[11]])
ggplotly(VioletPlotsGain[[12]])
ggplotly(VioletPlotsGain[[13]])
ggplotly(VioletPlotsGain[[14]])
ggplotly(VioletPlotsGain[[15]])
ggplotly(VioletPlotsGain[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsGain[[1]])
ggplotly(BluePlotsGain[[2]])
ggplotly(BluePlotsGain[[3]])
ggplotly(BluePlotsGain[[4]])
ggplotly(BluePlotsGain[[5]])
ggplotly(BluePlotsGain[[6]])
ggplotly(BluePlotsGain[[7]])
ggplotly(BluePlotsGain[[8]])
ggplotly(BluePlotsGain[[9]])
ggplotly(BluePlotsGain[[10]])
ggplotly(BluePlotsGain[[11]])
ggplotly(BluePlotsGain[[12]])
ggplotly(BluePlotsGain[[13]])
ggplotly(BluePlotsGain[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsGain[[1]])
ggplotly(RedPlotsGain[[2]])
ggplotly(RedPlotsGain[[3]])
ggplotly(RedPlotsGain[[4]])
ggplotly(RedPlotsGain[[5]])
ggplotly(RedPlotsGain[[6]])
ggplotly(RedPlotsGain[[7]])
ggplotly(RedPlotsGain[[8]])
```

::: {.card title="Gain"}
:::

## MFI {.tabset}

```{r}
#| title: UltraViolet
ggplotly(UltraVioletPlotsMFI[[1]])
ggplotly(UltraVioletPlotsMFI[[2]])
ggplotly(UltraVioletPlotsMFI[[3]])
ggplotly(UltraVioletPlotsMFI[[4]])
ggplotly(UltraVioletPlotsMFI[[5]])
ggplotly(UltraVioletPlotsMFI[[6]])
ggplotly(UltraVioletPlotsMFI[[7]])
ggplotly(UltraVioletPlotsMFI[[8]])
ggplotly(UltraVioletPlotsMFI[[9]])
ggplotly(UltraVioletPlotsMFI[[10]])
ggplotly(UltraVioletPlotsMFI[[11]])
ggplotly(UltraVioletPlotsMFI[[12]])
ggplotly(UltraVioletPlotsMFI[[13]])
ggplotly(UltraVioletPlotsMFI[[14]])
ggplotly(UltraVioletPlotsMFI[[15]])
ggplotly(UltraVioletPlotsMFI[[16]])
```

```{r}
#| title: Violet
ggplotly(VioletPlotsMFI[[1]])
ggplotly(VioletPlotsMFI[[2]])
ggplotly(VioletPlotsMFI[[3]])
ggplotly(VioletPlotsMFI[[4]])
ggplotly(VioletPlotsMFI[[5]])
ggplotly(VioletPlotsMFI[[6]])
ggplotly(VioletPlotsMFI[[7]])
ggplotly(VioletPlotsMFI[[8]])
ggplotly(VioletPlotsMFI[[9]])
ggplotly(VioletPlotsMFI[[10]])
ggplotly(VioletPlotsMFI[[11]])
ggplotly(VioletPlotsMFI[[12]])
ggplotly(VioletPlotsMFI[[13]])
ggplotly(VioletPlotsMFI[[14]])
ggplotly(VioletPlotsMFI[[15]])
ggplotly(VioletPlotsMFI[[16]])
```

```{r}
#| title: Blue
ggplotly(BluePlotsMFI[[1]])
ggplotly(BluePlotsMFI[[2]])
ggplotly(BluePlotsMFI[[3]])
ggplotly(BluePlotsMFI[[4]])
ggplotly(BluePlotsMFI[[5]])
ggplotly(BluePlotsMFI[[6]])
ggplotly(BluePlotsMFI[[7]])
ggplotly(BluePlotsMFI[[8]])
ggplotly(BluePlotsMFI[[9]])
ggplotly(BluePlotsMFI[[10]])
ggplotly(BluePlotsMFI[[11]])
ggplotly(BluePlotsMFI[[12]])
ggplotly(BluePlotsMFI[[13]])
ggplotly(BluePlotsMFI[[14]])
```

```{r}
#| title: Red
ggplotly(RedPlotsMFI[[1]])
ggplotly(RedPlotsMFI[[2]])
ggplotly(RedPlotsMFI[[3]])
ggplotly(RedPlotsMFI[[4]])
ggplotly(RedPlotsMFI[[5]])
ggplotly(RedPlotsMFI[[6]])
ggplotly(RedPlotsMFI[[7]])
ggplotly(RedPlotsMFI[[8]])
```

::: {.card title="MFI"}
:::
